@page "/"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject NavigationManager NavManager
@inject UserService userService

<PageTitle>Home</PageTitle>

<div class="bg-image-blurred" />
<div class="d-flex flex-column align-items-center h-75 z-1">

	@* Show the "Enter Username" form if a username for the user doesn't exist *@
	@if (userService.UsernameExists == false)
	{
		<h1 class="title-header title-header-opaque">Welcome!</h1>
		<div class="opaque-box">
			<p class="h5 fw-lighter w-75 text-center">
				Please enter your username below!
			</p>
			<form @onsubmit="OnUsernameSubmit" class="mt-4 d-flex flex-column align-items-center">
				<input type="text" @bind="username" class="text-box"/>
				<button type="submit" class="btn btn-primary mt-2">Confirm</button>
			</form>
		</div>
	}

	@* Show this if a username exists *@
	else 
	{
		<h1 class="title-header title-header-opaque">All ready! Where to next?</h1>
		<div class="d-flex flex-wrap align-items-center justify-content-center w-75 h-100">
			@foreach (var pageInfo in ComponentFinder.GetMainPages())
			{
				<MainPageCard PageInfo="pageInfo" OnPageClicked="(href) => NavManager.NavigateTo(href)"/>
			}
		</div>
	}
</div>

@code {
	string username = string.Empty;
	IEnumerable<string>? mainPages;

	private async Task OnUsernameSubmit()
	{
		if (username == string.Empty)
		{
			// TODO: add validation check
		}

		await userService.SetUsernameAsync(username);
	}
}